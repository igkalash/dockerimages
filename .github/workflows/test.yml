name: on_push_and_pull

on:
  push:

  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Lint code
      run: flake8



  push_to_registry:
    name: Push docker image to docker hub
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.tag.outputs.DOCKER_TAG}}
    steps:
      - name: check out the repo
        uses: actions/checkout@v2

      - name: login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Pushing image with tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: turbotroll/homework:${{github.ref_name}}

      - id: tag
        name: use sha short if there is no tag
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}

        run: |
         echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
         SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`
         echo "REF_NAME=`echo ${GITHUB_REF_NAME} |  tr '/' '_'`" >> $GITHUB_ENV
         REF_NAME=`echo ${GITHUB_REF_NAME} |  tr '/' '_'`
         echo "DOCKER_TAG=`echo ${REF_NAME}-${SHORT_SHA}`" >> $GITHUB_ENV
         echo "DOCKER_TAG=`echo ${REF_NAME}-${SHORT_SHA}`" >> $GITHUB_OUTPUT
         DOCKER_TAG=`echo ${REF_NAME}-${SHORT_SHA}`
         echo $DOCKER_TAG


      - name: Build and push docker image with no tag
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: turbotroll/homework:${{env.REF_NAME}}-${{env.SHORT_SHA}}


  deploy:
      needs: push_to_registry
      name: comose up on a remote server
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: tag for the docker compose
          env:
            DOCKER_TAG: ${{ needs.push_to_registry.outputs.output1 }}
          run: |
            echo "IMAGE_TAG=$DOCKER_TAG" >> $GITHUB_ENV
            IMAGE_TAG=$DOCKER_TAG
            echo $DOCKER_TAG
            echo $IMAGE_TAG





        - name: copy key to github runner
          uses: webfactory/ssh-agent@v0.8.0
          with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

        - name: populate known hosts on a runner
          run: |
            ssh -o StrictHostKeyChecking=no ubuntu@homework-365773d5e66ee011.elb.us-west-1.amazonaws.com exit

        - name: create context for a docker
          run: |
            docker context create homework --description "remote connection to ec2" --docker "host=ssh://ubuntu@homework-365773d5e66ee011.elb.us-west-1.amazonaws.com"
            docker context use homework

        - name: compose up
          run: |
            docker-compose up -d
